plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
    fabric()
}

repositories {
    maven {
        name = "REI Maven"
        url = "https://maven.shedaniel.me/"
    }
    maven {
        name = "fabric maven"
        url = "https://maven.fabricmc.net"
    }
    maven {
        name = "ModMenu Maven"
        url = "https://maven.terraformersmc.com/releases/"
    }
    maven {
        name = "Curse Maven"
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    modCompile "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modCompile "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    // Remove the next line if you don't want to depend on the API
    modCompile "me.shedaniel:architectury-fabric:${rootProject.architectury_version}"

    modImplementation "me.shedaniel:RoughlyEnoughItems:${rootProject.rei_version}"
    modRuntime "com.terraformersmc:modmenu:${rootProject.modmenu_version}"
    modImplementation "curse.maven:wthit-440979:${rootProject.wthit_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentFabric(project(path: ":common")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    classifier "fabric"
}